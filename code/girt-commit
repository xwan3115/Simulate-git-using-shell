#! /bin/dash
# First of all, always check if the .girt exists
if test -d "$girtinit"
then
    echo "girt-commit: error: girt repository directory .girt not found"
    exit 1
fi
# Check the usage of the girt-commit
# There are either 2 or 3 argument in the message
if test $# -eq 2
then
    if test "$1" = "-m"
    then
        message=$2
    else
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
# For the 3-argument situation, we test if the first two are -a -m
elif test $# -eq 3
then
    if test "$1" = "-a"
    then
        if test "$2" = "-m"
        then
            message=$3
            # With the -a option, we add everthing in index from directory to index
            indexfilename=`ls .girt/index/ 2>/dev/null`
            for indexfile in $indexfilename
            do
                # If in the current directory, this file has removed
                # We remove this file from index
                if test -f $indexfile
                then
                    cp $indexfile .girt/index/$indexfile
                else
                    rm .girt/index/$indexfile
                fi
            done
        else
            echo "usage: girt-commit [-a] -m commit-message"
            exit 1
        fi
    else
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
else
    echo "usage: girt-commit [-a] -m commit-message"
    exit 1
fi

# this exist variable will give a list of all the commit in the file
exist=`ls .girt|grep -E "^commit" 2>/dev/null`
n=0

# We check if the index is empty, if it is, we do not create commit
# We just exit
files=`ls .girt/index/* 2>/dev/null`
#if test -z "$files"
#then
    # If there is nothing in current dirctoty, with the -a option,
    # a commit will still be created according to 2041 girt-commit
    # So we only test if index is empty for girt-commit -m <message>
    #if test $# -eq 2
    #then
        #echo "nothing to commit"
        #exit 1
    #fi
#fi

# Next we decide which commit is next
if test -z "$exist"
then
    # If there is no commit has ever been created, we check if the index is empty
    if test -z "$files"
    then
        echo "nothing to commit"
        exit 1
    fi
    # We create a commit and move everthing to commit_0
    mkdir .girt/commit_0
    for file in $files
    do
        filename=`echo "$file"|cut -d"/" -f3`
        cp .girt/index/$filename .girt/commit_$n/$filename
    done
    echo "Committed as commit $n"
    echo "$n $message" >>.girt/log.txt
else
    # We find which one is the latest commit and find out what should be the
    # next commit number
    nu=`echo "$exist"|cut -d"_" -f2|sort -n|uniq|tail -1`
    n=$(( $nu+1 ))

    # Before we make the commit, we have to be sure that, there has been
    # some changes made. If they are still the same file, then we print 
    # nothing to commit according to 2041 girt-commit
    diff -q .girt/index .girt/commit_$nu 1>/dev/null
    if test $? -eq 0
    then
        echo "nothing to commit"
    else
        mkdir .girt/commit_$n 2>/dev/null
        for file in $files
        do
            filename=`echo "$file"|cut -d"/" -f3`
            cp .girt/index/$filename .girt/commit_$n/$filename
        done
        echo "Committed as commit $n"
        echo "$n $message" >>.girt/log.txt
    fi   
fi
